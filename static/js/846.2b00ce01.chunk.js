"use strict";(self.webpackChunkswisex_front=self.webpackChunkswisex_front||[]).push([[846],{99846:function(t,e,c){c.r(e),c.d(e,{diagram:function(){return z}});var r=c(37762),a=c(1413),n=c(58971),i=c(13501),o=(c(97892),c(10504),c(78703),function(){var t=function(t,e,c,r){for(c=c||{},r=t.length;r--;c[t[r]]=e);return c},e=[1,4],c=[1,7],r=[1,5],a=[1,9],n=[1,6],i=[2,6],o=[1,16],s=[6,8,14,20,22,24,25,27,29,32,37,40,50,55],l=[8,14,20,22,24,25,27,29,32,37,40],h=[8,13,14,20,22,24,25,27,29,32,37,40],m=[1,26],u=[6,8,14,50,55],y=[8,14,55],p=[1,53],g=[1,52],d=[8,14,30,33,35,38,55],b=[1,67],f=[1,68],k=[1,69],_=[8,14,33,35,42,55],x={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,directive:5,GG:6,document:7,EOF:8,":":9,DIR:10,options:11,body:12,OPT:13,NL:14,line:15,statement:16,commitStatement:17,mergeStatement:18,cherryPickStatement:19,acc_title:20,acc_title_value:21,acc_descr:22,acc_descr_value:23,acc_descr_multiline_value:24,section:25,branchStatement:26,CHECKOUT:27,ref:28,BRANCH:29,ORDER:30,NUM:31,CHERRY_PICK:32,COMMIT_ID:33,STR:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,openDirective:46,typeDirective:47,closeDirective:48,argDirective:49,open_directive:50,type_directive:51,arg_directive:52,close_directive:53,ID:54,";":55,$accept:0,$end:1},terminals_:{2:"error",6:"GG",8:"EOF",9:":",10:"DIR",13:"OPT",14:"NL",20:"acc_title",21:"acc_title_value",22:"acc_descr",23:"acc_descr_value",24:"acc_descr_multiline_value",25:"section",27:"CHECKOUT",29:"BRANCH",30:"ORDER",31:"NUM",32:"CHERRY_PICK",33:"COMMIT_ID",34:"STR",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",50:"open_directive",51:"type_directive",52:"arg_directive",53:"close_directive",54:"ID",55:";"},productions_:[0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[26,2],[26,4],[19,3],[19,5],[19,5],[19,5],[19,5],[18,2],[18,4],[18,4],[18,4],[18,6],[18,6],[18,6],[18,6],[18,6],[18,6],[18,8],[18,8],[18,8],[18,8],[18,8],[18,8],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[41,0],[41,1],[39,1],[39,1],[39,1],[5,3],[5,5],[46,1],[47,1],[49,1],[48,1],[28,1],[28,1],[4,1],[4,1],[4,1]],performAction:function(t,e,c,r,a,n,i){var o=n.length-1;switch(a){case 3:return n[o];case 4:return n[o-1];case 5:return r.setDirection(n[o-3]),n[o-1];case 7:r.setOptions(n[o-1]),this.$=n[o];break;case 8:n[o-1]+=n[o],this.$=n[o-1];break;case 10:this.$=[];break;case 11:n[o-1].push(n[o]),this.$=n[o-1];break;case 12:this.$=n[o-1];break;case 17:this.$=n[o].trim(),r.setAccTitle(this.$);break;case 18:case 19:this.$=n[o].trim(),r.setAccDescription(this.$);break;case 20:r.addSection(n[o].substr(8)),this.$=n[o].substr(8);break;case 22:r.checkout(n[o]);break;case 23:r.branch(n[o]);break;case 24:r.branch(n[o-2],n[o]);break;case 25:r.cherryPick(n[o],"",void 0);break;case 26:r.cherryPick(n[o-2],"",n[o]);break;case 27:case 29:r.cherryPick(n[o-2],"","");break;case 28:r.cherryPick(n[o],"",n[o-2]);break;case 30:r.merge(n[o],"","","");break;case 31:r.merge(n[o-2],n[o],"","");break;case 32:r.merge(n[o-2],"",n[o],"");break;case 33:r.merge(n[o-2],"","",n[o]);break;case 34:r.merge(n[o-4],n[o],"",n[o-2]);break;case 35:r.merge(n[o-4],"",n[o],n[o-2]);break;case 36:r.merge(n[o-4],"",n[o-2],n[o]);break;case 37:r.merge(n[o-4],n[o-2],n[o],"");break;case 38:r.merge(n[o-4],n[o-2],"",n[o]);break;case 39:r.merge(n[o-4],n[o],n[o-2],"");break;case 40:r.merge(n[o-6],n[o-4],n[o-2],n[o]);break;case 41:r.merge(n[o-6],n[o],n[o-4],n[o-2]);break;case 42:r.merge(n[o-6],n[o-4],n[o],n[o-2]);break;case 43:r.merge(n[o-6],n[o-2],n[o-4],n[o]);break;case 44:r.merge(n[o-6],n[o],n[o-2],n[o-4]);break;case 45:r.merge(n[o-6],n[o-2],n[o],n[o-4]);break;case 46:r.commit(n[o]);break;case 47:r.commit("","",r.commitType.NORMAL,n[o]);break;case 48:r.commit("","",n[o],"");break;case 49:r.commit("","",n[o],n[o-2]);break;case 50:r.commit("","",n[o-2],n[o]);break;case 51:r.commit("",n[o],r.commitType.NORMAL,"");break;case 52:r.commit("",n[o-2],r.commitType.NORMAL,n[o]);break;case 53:r.commit("",n[o],r.commitType.NORMAL,n[o-2]);break;case 54:r.commit("",n[o-2],n[o],"");break;case 55:r.commit("",n[o],n[o-2],"");break;case 56:r.commit("",n[o-4],n[o-2],n[o]);break;case 57:r.commit("",n[o-4],n[o],n[o-2]);break;case 58:r.commit("",n[o-2],n[o-4],n[o]);break;case 59:r.commit("",n[o],n[o-4],n[o-2]);break;case 60:r.commit("",n[o],n[o-2],n[o-4]);break;case 61:r.commit("",n[o-2],n[o],n[o-4]);break;case 62:r.commit(n[o],"",r.commitType.NORMAL,"");break;case 63:r.commit(n[o],"",r.commitType.NORMAL,n[o-2]);break;case 64:r.commit(n[o-2],"",r.commitType.NORMAL,n[o]);break;case 65:r.commit(n[o-2],"",n[o],"");break;case 66:r.commit(n[o],"",n[o-2],"");break;case 67:r.commit(n[o],n[o-2],r.commitType.NORMAL,"");break;case 68:r.commit(n[o-2],n[o],r.commitType.NORMAL,"");break;case 69:r.commit(n[o-4],"",n[o-2],n[o]);break;case 70:r.commit(n[o-4],"",n[o],n[o-2]);break;case 71:r.commit(n[o-2],"",n[o-4],n[o]);break;case 72:r.commit(n[o],"",n[o-4],n[o-2]);break;case 73:r.commit(n[o],"",n[o-2],n[o-4]);break;case 74:r.commit(n[o-2],"",n[o],n[o-4]);break;case 75:r.commit(n[o-4],n[o],n[o-2],"");break;case 76:r.commit(n[o-4],n[o-2],n[o],"");break;case 77:r.commit(n[o-2],n[o],n[o-4],"");break;case 78:r.commit(n[o],n[o-2],n[o-4],"");break;case 79:r.commit(n[o],n[o-4],n[o-2],"");break;case 80:r.commit(n[o-2],n[o-4],n[o],"");break;case 81:r.commit(n[o-4],n[o],r.commitType.NORMAL,n[o-2]);break;case 82:r.commit(n[o-4],n[o-2],r.commitType.NORMAL,n[o]);break;case 83:r.commit(n[o-2],n[o],r.commitType.NORMAL,n[o-4]);break;case 84:r.commit(n[o],n[o-2],r.commitType.NORMAL,n[o-4]);break;case 85:r.commit(n[o],n[o-4],r.commitType.NORMAL,n[o-2]);break;case 86:r.commit(n[o-2],n[o-4],r.commitType.NORMAL,n[o]);break;case 87:r.commit(n[o-6],n[o-4],n[o-2],n[o]);break;case 88:r.commit(n[o-6],n[o-4],n[o],n[o-2]);break;case 89:r.commit(n[o-6],n[o-2],n[o-4],n[o]);break;case 90:r.commit(n[o-6],n[o],n[o-4],n[o-2]);break;case 91:r.commit(n[o-6],n[o-2],n[o],n[o-4]);break;case 92:r.commit(n[o-6],n[o],n[o-2],n[o-4]);break;case 93:r.commit(n[o-4],n[o-6],n[o-2],n[o]);break;case 94:r.commit(n[o-4],n[o-6],n[o],n[o-2]);break;case 95:r.commit(n[o-2],n[o-6],n[o-4],n[o]);break;case 96:r.commit(n[o],n[o-6],n[o-4],n[o-2]);break;case 97:r.commit(n[o-2],n[o-6],n[o],n[o-4]);break;case 98:r.commit(n[o],n[o-6],n[o-2],n[o-4]);break;case 99:r.commit(n[o],n[o-4],n[o-2],n[o-6]);break;case 100:r.commit(n[o-2],n[o-4],n[o],n[o-6]);break;case 101:r.commit(n[o],n[o-2],n[o-4],n[o-6]);break;case 102:r.commit(n[o-2],n[o],n[o-4],n[o-6]);break;case 103:r.commit(n[o-4],n[o-2],n[o],n[o-6]);break;case 104:r.commit(n[o-4],n[o],n[o-2],n[o-6]);break;case 105:r.commit(n[o-2],n[o-4],n[o-6],n[o]);break;case 106:r.commit(n[o],n[o-4],n[o-6],n[o-2]);break;case 107:r.commit(n[o-2],n[o],n[o-6],n[o-4]);break;case 108:r.commit(n[o],n[o-2],n[o-6],n[o-4]);break;case 109:r.commit(n[o-4],n[o-2],n[o-6],n[o]);break;case 110:r.commit(n[o-4],n[o],n[o-6],n[o-2]);break;case 111:this.$="";break;case 112:this.$=n[o];break;case 113:this.$=r.commitType.NORMAL;break;case 114:this.$=r.commitType.REVERSE;break;case 115:this.$=r.commitType.HIGHLIGHT;break;case 118:r.parseDirective("%%{","open_directive");break;case 119:r.parseDirective(n[o],"type_directive");break;case 120:n[o]=n[o].trim().replace(/'/g,'"'),r.parseDirective(n[o],"arg_directive");break;case 121:r.parseDirective("}%%","close_directive","gitGraph")}},table:[{3:1,4:2,5:3,6:e,8:c,14:r,46:8,50:a,55:n},{1:[3]},{3:10,4:2,5:3,6:e,8:c,14:r,46:8,50:a,55:n},{3:11,4:2,5:3,6:e,8:c,14:r,46:8,50:a,55:n},{7:12,8:i,9:[1,13],10:[1,14],11:15,14:o},t(s,[2,124]),t(s,[2,125]),t(s,[2,126]),{47:17,51:[1,18]},{51:[2,118]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:i,11:15,14:o},{9:[1,21]},t(l,[2,10],{12:22,13:[1,23]}),t(h,[2,9]),{9:[1,25],48:24,53:m},t([9,53],[2,119]),{1:[2,3]},{8:[1,27]},{7:28,8:i,11:15,14:o},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:34,20:[1,35],22:[1,36],24:[1,37],25:[1,38],26:39,27:[1,40],29:[1,44],32:[1,43],37:[1,42],40:[1,41]},t(h,[2,8]),t(u,[2,116]),{49:45,52:[1,46]},t(u,[2,121]),{1:[2,4]},{8:[1,47]},t(l,[2,11]),{4:48,8:c,14:r,55:n},t(l,[2,13]),t(y,[2,14]),t(y,[2,15]),t(y,[2,16]),{21:[1,49]},{23:[1,50]},t(y,[2,19]),t(y,[2,20]),t(y,[2,21]),{28:51,34:p,54:g},t(y,[2,111],{41:54,33:[1,57],34:[1,59],35:[1,55],38:[1,56],42:[1,58]}),{28:60,34:p,54:g},{33:[1,61],35:[1,62]},{28:63,34:p,54:g},{48:64,53:m},{53:[2,120]},{1:[2,5]},t(l,[2,12]),t(y,[2,17]),t(y,[2,18]),t(y,[2,22]),t(d,[2,122]),t(d,[2,123]),t(y,[2,46]),{34:[1,65]},{39:66,43:b,44:f,45:k},{34:[1,70]},{34:[1,71]},t(y,[2,112]),t(y,[2,30],{33:[1,72],35:[1,74],38:[1,73]}),{34:[1,75]},{34:[1,76],36:[1,77]},t(y,[2,23],{30:[1,78]}),t(u,[2,117]),t(y,[2,47],{33:[1,80],38:[1,79],42:[1,81]}),t(y,[2,48],{33:[1,83],35:[1,82],42:[1,84]}),t(_,[2,113]),t(_,[2,114]),t(_,[2,115]),t(y,[2,51],{35:[1,85],38:[1,86],42:[1,87]}),t(y,[2,62],{33:[1,90],35:[1,88],38:[1,89]}),{34:[1,91]},{39:92,43:b,44:f,45:k},{34:[1,93]},t(y,[2,25],{35:[1,94]}),{33:[1,95]},{33:[1,96]},{31:[1,97]},{39:98,43:b,44:f,45:k},{34:[1,99]},{34:[1,100]},{34:[1,101]},{34:[1,102]},{34:[1,103]},{34:[1,104]},{39:105,43:b,44:f,45:k},{34:[1,106]},{34:[1,107]},{39:108,43:b,44:f,45:k},{34:[1,109]},t(y,[2,31],{35:[1,111],38:[1,110]}),t(y,[2,32],{33:[1,113],35:[1,112]}),t(y,[2,33],{33:[1,114],38:[1,115]}),{34:[1,116],36:[1,117]},{34:[1,118]},{34:[1,119]},t(y,[2,24]),t(y,[2,49],{33:[1,120],42:[1,121]}),t(y,[2,53],{38:[1,122],42:[1,123]}),t(y,[2,63],{33:[1,125],38:[1,124]}),t(y,[2,50],{33:[1,126],42:[1,127]}),t(y,[2,55],{35:[1,128],42:[1,129]}),t(y,[2,66],{33:[1,131],35:[1,130]}),t(y,[2,52],{38:[1,132],42:[1,133]}),t(y,[2,54],{35:[1,134],42:[1,135]}),t(y,[2,67],{35:[1,137],38:[1,136]}),t(y,[2,64],{33:[1,139],38:[1,138]}),t(y,[2,65],{33:[1,141],35:[1,140]}),t(y,[2,68],{35:[1,143],38:[1,142]}),{39:144,43:b,44:f,45:k},{34:[1,145]},{34:[1,146]},{34:[1,147]},{34:[1,148]},{39:149,43:b,44:f,45:k},t(y,[2,26]),t(y,[2,27]),t(y,[2,28]),t(y,[2,29]),{34:[1,150]},{34:[1,151]},{39:152,43:b,44:f,45:k},{34:[1,153]},{39:154,43:b,44:f,45:k},{34:[1,155]},{34:[1,156]},{34:[1,157]},{34:[1,158]},{34:[1,159]},{34:[1,160]},{34:[1,161]},{39:162,43:b,44:f,45:k},{34:[1,163]},{34:[1,164]},{34:[1,165]},{39:166,43:b,44:f,45:k},{34:[1,167]},{39:168,43:b,44:f,45:k},{34:[1,169]},{34:[1,170]},{34:[1,171]},{39:172,43:b,44:f,45:k},{34:[1,173]},t(y,[2,37],{35:[1,174]}),t(y,[2,38],{38:[1,175]}),t(y,[2,36],{33:[1,176]}),t(y,[2,39],{35:[1,177]}),t(y,[2,34],{38:[1,178]}),t(y,[2,35],{33:[1,179]}),t(y,[2,60],{42:[1,180]}),t(y,[2,73],{33:[1,181]}),t(y,[2,61],{42:[1,182]}),t(y,[2,84],{38:[1,183]}),t(y,[2,74],{33:[1,184]}),t(y,[2,83],{38:[1,185]}),t(y,[2,59],{42:[1,186]}),t(y,[2,72],{33:[1,187]}),t(y,[2,58],{42:[1,188]}),t(y,[2,78],{35:[1,189]}),t(y,[2,71],{33:[1,190]}),t(y,[2,77],{35:[1,191]}),t(y,[2,57],{42:[1,192]}),t(y,[2,85],{38:[1,193]}),t(y,[2,56],{42:[1,194]}),t(y,[2,79],{35:[1,195]}),t(y,[2,80],{35:[1,196]}),t(y,[2,86],{38:[1,197]}),t(y,[2,70],{33:[1,198]}),t(y,[2,81],{38:[1,199]}),t(y,[2,69],{33:[1,200]}),t(y,[2,75],{35:[1,201]}),t(y,[2,76],{35:[1,202]}),t(y,[2,82],{38:[1,203]}),{34:[1,204]},{39:205,43:b,44:f,45:k},{34:[1,206]},{34:[1,207]},{39:208,43:b,44:f,45:k},{34:[1,209]},{34:[1,210]},{34:[1,211]},{34:[1,212]},{39:213,43:b,44:f,45:k},{34:[1,214]},{39:215,43:b,44:f,45:k},{34:[1,216]},{34:[1,217]},{34:[1,218]},{34:[1,219]},{34:[1,220]},{34:[1,221]},{34:[1,222]},{39:223,43:b,44:f,45:k},{34:[1,224]},{34:[1,225]},{34:[1,226]},{39:227,43:b,44:f,45:k},{34:[1,228]},{39:229,43:b,44:f,45:k},{34:[1,230]},{34:[1,231]},{34:[1,232]},{39:233,43:b,44:f,45:k},t(y,[2,40]),t(y,[2,42]),t(y,[2,41]),t(y,[2,43]),t(y,[2,45]),t(y,[2,44]),t(y,[2,101]),t(y,[2,102]),t(y,[2,99]),t(y,[2,100]),t(y,[2,104]),t(y,[2,103]),t(y,[2,108]),t(y,[2,107]),t(y,[2,106]),t(y,[2,105]),t(y,[2,110]),t(y,[2,109]),t(y,[2,98]),t(y,[2,97]),t(y,[2,96]),t(y,[2,95]),t(y,[2,93]),t(y,[2,94]),t(y,[2,92]),t(y,[2,91]),t(y,[2,90]),t(y,[2,89]),t(y,[2,87]),t(y,[2,88])],defaultActions:{9:[2,118],10:[2,1],11:[2,2],19:[2,3],27:[2,4],46:[2,120],47:[2,5]},parseError:function(t,e){if(!e.recoverable){var c=new Error(t);throw c.hash=e,c}this.trace(t)},parse:function(t){var e=this,c=[0],r=[],a=[null],n=[],i=this.table,o="",s=0,l=0,h=n.slice.call(arguments,1),m=Object.create(this.lexer),u={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(u.yy[y]=this.yy[y]);m.setInput(t,u.yy),u.yy.lexer=m,u.yy.parser=this,"undefined"==typeof m.yylloc&&(m.yylloc={});var p=m.yylloc;n.push(p);var g=m.options&&m.options.ranges;function d(){var t;return"number"!==typeof(t=r.pop()||m.lex()||1)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}"function"===typeof u.yy.parseError?this.parseError=u.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var b,f,k,_,x,v,w,T,E={};;){if(f=c[c.length-1],this.defaultActions[f]?k=this.defaultActions[f]:(null!==b&&"undefined"!=typeof b||(b=d()),k=i[f]&&i[f][b]),"undefined"===typeof k||!k.length||!k[0]){var L="";for(x in T=[],i[f])this.terminals_[x]&&x>2&&T.push("'"+this.terminals_[x]+"'");L=m.showPosition?"Parse error on line "+(s+1)+":\n"+m.showPosition()+"\nExpecting "+T.join(", ")+", got '"+(this.terminals_[b]||b)+"'":"Parse error on line "+(s+1)+": Unexpected "+(1==b?"end of input":"'"+(this.terminals_[b]||b)+"'"),this.parseError(L,{text:m.match,token:this.terminals_[b]||b,line:m.yylineno,loc:p,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error("Parse Error: multiple actions possible at state: "+f+", token: "+b);switch(k[0]){case 1:c.push(b),a.push(m.yytext),n.push(m.yylloc),c.push(k[1]),b=null,l=m.yyleng,o=m.yytext,s=m.yylineno,p=m.yylloc;break;case 2:if(v=this.productions_[k[1]][1],E.$=a[a.length-v],E._$={first_line:n[n.length-(v||1)].first_line,last_line:n[n.length-1].last_line,first_column:n[n.length-(v||1)].first_column,last_column:n[n.length-1].last_column},g&&(E._$.range=[n[n.length-(v||1)].range[0],n[n.length-1].range[1]]),"undefined"!==typeof(_=this.performAction.apply(E,[o,l,s,u.yy,k[1],a,n].concat(h))))return _;v&&(c=c.slice(0,-1*v*2),a=a.slice(0,-1*v),n=n.slice(0,-1*v)),c.push(this.productions_[k[1]][0]),a.push(E.$),n.push(E._$),w=i[c[c.length-2]][c[c.length-1]],c.push(w);break;case 3:return!0}}return!0}},v={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,c=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var a=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===r.length?this.yylloc.first_column:0)+r[r.length-c.length].length-c[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[a[0],a[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},test_match:function(t,e){var c,r,a;if(this.options.backtrack_lexer&&(a={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(a.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],c=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),c)return c;if(this._backtrack){for(var n in a)this[n]=a[n];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,c,r;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var a=this._currentRules(),n=0;n<a.length;n++)if((c=this._input.match(this.rules[a[n]]))&&(!e||c[0].length>e[0].length)){if(e=c,r=n,this.options.backtrack_lexer){if(!1!==(t=this.test_match(c,a[n])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,a[r]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:"INITIAL"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(t,e,c,r){switch(c){case 0:return this.begin("open_directive"),50;case 1:return this.begin("type_directive"),51;case 2:return this.popState(),this.begin("arg_directive"),9;case 3:return this.popState(),this.popState(),53;case 4:return 52;case 5:return this.begin("acc_title"),20;case 6:return this.popState(),"acc_title_value";case 7:return this.begin("acc_descr"),22;case 8:return this.popState(),"acc_descr_value";case 9:this.begin("acc_descr_multiline");break;case 10:case 34:case 38:this.popState();break;case 11:return"acc_descr_multiline_value";case 12:return 14;case 13:case 14:break;case 15:return 6;case 16:return 40;case 17:return 33;case 18:return 38;case 19:return 42;case 20:return 43;case 21:return 44;case 22:return 45;case 23:return 35;case 24:return 29;case 25:return 30;case 26:return 37;case 27:return 32;case 28:return 27;case 29:case 30:return 10;case 31:return 9;case 32:return"CARET";case 33:this.begin("options");break;case 35:return 13;case 36:return 36;case 37:this.begin("string");break;case 39:return 34;case 40:return 31;case 41:return 54;case 42:return 8}},rules:[/^(?:%%\{)/i,/^(?:((?:(?!\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\}%%)/i,/^(?:((?:(?!\}%%).|\n)*))/i,/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[10,11],inclusive:!1},acc_descr:{rules:[8],inclusive:!1},acc_title:{rules:[6],inclusive:!1},close_directive:{rules:[],inclusive:!1},arg_directive:{rules:[3,4],inclusive:!1},type_directive:{rules:[2,3],inclusive:!1},open_directive:{rules:[1],inclusive:!1},options:{rules:[34,35],inclusive:!1},string:{rules:[38,39],inclusive:!1},INITIAL:{rules:[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,40,41,42,43],inclusive:!0}}};function w(){this.yy={}}return x.lexer=v,w.prototype=x,x.Parser=w,new w}());o.parser=o;var s=o,l=(0,n.c)().gitGraph.mainBranchName,h=(0,n.c)().gitGraph.mainBranchOrder,m={},u=null,y={};y[l]={name:l,order:h};var p={};p[l]=u;var g=l,d="LR",b=0;function f(){return(0,n.y)({length:7})}var k={},_=function(t){if(t=n.e.sanitizeText(t,(0,n.c)()),void 0===p[t]){var e=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+t+'")');throw e.hash={text:"checkout "+t,token:"checkout "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+t+'"']},e}var c=p[g=t];u=m[c]};function x(t,e,c){var r=t.indexOf(e);-1===r?t.push(c):t.splice(r,1,c)}function v(t){var e=t.reduce((function(t,e){return t.seq>e.seq?t:e}),t[0]),c="";t.forEach((function(t){c+=t===e?"\t*":"\t|"}));var r=[c,e.id,e.seq];for(var a in p)p[a]===e.id&&r.push(a);if(n.l.debug(r.join(" ")),e.parents&&2==e.parents.length){var i=m[e.parents[0]];x(t,e,i),t.push(m[e.parents[1]])}else{if(0==e.parents.length)return;var o=m[e.parents];x(t,e,o)}v(t=function(t,e){var c=Object.create(null);return t.reduce((function(t,r){var a=e(r);return c[a]||(c[a]=!0,t.push(r)),t}),[])}(t,(function(t){return t.id})))}var w=function(){var t=Object.keys(m).map((function(t){return m[t]}));return t.forEach((function(t){n.l.debug(t.id)})),t.sort((function(t,e){return t.seq-e.seq})),t},T={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},E={parseDirective:function(t,e,c){n.m.parseDirective(this,t,e,c)},getConfig:function(){return(0,n.c)().gitGraph},setDirection:function(t){d=t},setOptions:function(t){n.l.debug("options str",t),t=(t=t&&t.trim())||"{}";try{k=JSON.parse(t)}catch(e){n.l.error("error while parsing gitGraph options",e.message)}},getOptions:function(){return k},commit:function(t,e,c,r){n.l.debug("Entering commit:",t,e,c,r),e=n.e.sanitizeText(e,(0,n.c)()),t=n.e.sanitizeText(t,(0,n.c)()),r=n.e.sanitizeText(r,(0,n.c)());var a={id:e||b+"-"+f(),message:t,seq:b++,type:c||T.NORMAL,tag:r||"",parents:null==u?[]:[u.id],branch:g};u=a,m[a.id]=a,p[g]=a.id,n.l.debug("in pushCommit "+a.id)},branch:function(t,e){if(t=n.e.sanitizeText(t,(0,n.c)()),void 0!==p[t]){var c=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+t+'")');throw c.hash={text:"branch "+t,token:"branch "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+t+'"']},c}p[t]=null!=u?u.id:null,y[t]={name:t,order:e?parseInt(e,10):null},_(t),n.l.debug("in createBranch")},merge:function(t,e,c,r){t=n.e.sanitizeText(t,(0,n.c)()),e=n.e.sanitizeText(e,(0,n.c)());var a=m[p[g]],i=m[p[t]];if(g===t){var o=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw o.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},o}if(void 0===a||!a){var s=new Error('Incorrect usage of "merge". Current branch ('+g+")has no commits");throw s.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},s}if(void 0===p[t]){var l=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") does not exist");throw l.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+t]},l}if(void 0===i||!i){var h=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") has no commits");throw h.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},h}if(a===i){var y=new Error('Incorrect usage of "merge". Both branches have same head');throw y.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},y}if(e&&void 0!==m[e]){var d=new Error('Incorrect usage of "merge". Commit with id:'+e+" already exists, use different custom Id");throw d.hash={text:"merge "+t+e+c+r,token:"merge "+t+e+c+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+t+" "+e+"_UNIQUE "+c+" "+r]},d}var k={id:e||b+"-"+f(),message:"merged branch "+t+" into "+g,seq:b++,parents:[null==u?null:u.id,p[t]],branch:g,type:T.MERGE,customType:c,customId:!!e,tag:r||""};u=k,m[k.id]=k,p[g]=k.id,n.l.debug(p),n.l.debug("in mergeBranch")},cherryPick:function(t,e,c){if(n.l.debug("Entering cherryPick:",t,e,c),t=n.e.sanitizeText(t,(0,n.c)()),e=n.e.sanitizeText(e,(0,n.c)()),c=n.e.sanitizeText(c,(0,n.c)()),!t||void 0===m[t]){var r=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}var a=m[t],i=a.branch;if(a.type===T.MERGE){var o=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw o.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},o}if(!e||void 0===m[e]){var s;if(i===g){var l=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw l.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},l}var h=m[p[g]];if(void 0===h||!h){var y=new Error('Incorrect usage of "cherry-pick". Current branch ('+g+")has no commits");throw y.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},y}var d={id:b+"-"+f(),message:"cherry-picked "+a+" into "+g,seq:b++,parents:[null==u?null:u.id,a.id],branch:g,type:T.CHERRY_PICK,tag:null!==(s=c)&&void 0!==s?s:"cherry-pick:"+a.id};u=d,m[d.id]=d,p[g]=d.id,n.l.debug(p),n.l.debug("in cherryPick")}},checkout:_,prettyPrint:function(){n.l.debug(m),v([w()[0]])},clear:function(){m={},u=null;var t=(0,n.c)().gitGraph.mainBranchName,e=(0,n.c)().gitGraph.mainBranchOrder;(p={})[t]=null,(y={})[t]={name:t,order:e},g=t,b=0,(0,n.v)()},getBranchesAsObjArray:function(){return Object.values(y).map((function(t,e){return null!==t.order?t:(0,a.Z)((0,a.Z)({},t),{},{order:parseFloat("0.".concat(e),10)})})).sort((function(t,e){return t.order-e.order})).map((function(t){return{name:t.name}}))},getBranches:function(){return p},getCommits:function(){return m},getCommitsArray:w,getCurrentBranch:function(){return g},getDirection:function(){return d},getHead:function(){return u},setAccTitle:n.s,getAccTitle:n.g,getAccDescription:n.a,setAccDescription:n.b,setDiagramTitle:n.r,getDiagramTitle:n.t,commitType:T},L={},M=0,A=1,I=2,R=3,O=4,C={},S={},B=[],P=0,N="LR",G=function(t){var e=document.createElementNS("http://www.w3.org/2000/svg","text"),c=[];c="string"===typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[];var a,n=(0,r.Z)(c);try{for(n.s();!(a=n.n()).done;){var i=a.value,o=document.createElementNS("http://www.w3.org/2000/svg","tspan");o.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),o.setAttribute("dy","1em"),o.setAttribute("x","0"),o.setAttribute("class","row"),o.textContent=i.trim(),e.appendChild(o)}}catch(s){n.e(s)}finally{n.f()}return e},D=function(t,e,c){var r=(0,n.z)().gitGraph,a=t.append("g").attr("class","commit-bullets"),i=t.append("g").attr("class","commit-labels"),o=0;"TB"===N&&(o=30),Object.keys(e).sort((function(t,c){return e[t].seq-e[c].seq})).forEach((function(t){var n=e[t],s="TB"===N?o+10:C[n.branch].pos,l="TB"===N?C[n.branch].pos:o+10;if(c){var h,m=void 0!==n.customType&&""!==n.customType?n.customType:n.type;switch(m){case M:h="commit-normal";break;case A:h="commit-reverse";break;case I:h="commit-highlight";break;case R:h="commit-merge";break;case O:h="commit-cherry-pick";break;default:h="commit-normal"}if(m===I){var u=a.append("rect");u.attr("x",l-10),u.attr("y",s-10),u.attr("height",20),u.attr("width",20),u.attr("class","commit ".concat(n.id," commit-highlight").concat(C[n.branch].index%8," ").concat(h,"-outer")),a.append("rect").attr("x",l-6).attr("y",s-6).attr("height",12).attr("width",12).attr("class","commit ".concat(n.id," commit").concat(C[n.branch].index%8," ").concat(h,"-inner"))}else if(m===O)a.append("circle").attr("cx",l).attr("cy",s).attr("r",10).attr("class","commit ".concat(n.id," ").concat(h)),a.append("circle").attr("cx",l-3).attr("cy",s+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(n.id," ").concat(h)),a.append("circle").attr("cx",l+3).attr("cy",s+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(n.id," ").concat(h)),a.append("line").attr("x1",l+3).attr("y1",s+1).attr("x2",l).attr("y2",s-5).attr("stroke","#fff").attr("class","commit ".concat(n.id," ").concat(h)),a.append("line").attr("x1",l-3).attr("y1",s+1).attr("x2",l).attr("y2",s-5).attr("stroke","#fff").attr("class","commit ".concat(n.id," ").concat(h));else{var y=a.append("circle");if(y.attr("cx",l),y.attr("cy",s),y.attr("r",n.type===R?9:10),y.attr("class","commit ".concat(n.id," commit").concat(C[n.branch].index%8)),m===R){var p=a.append("circle");p.attr("cx",l),p.attr("cy",s),p.attr("r",6),p.attr("class","commit ".concat(h," ").concat(n.id," commit").concat(C[n.branch].index%8))}if(m===A)a.append("path").attr("d","M ".concat(l-5,",").concat(s-5,"L").concat(l+5,",").concat(s+5,"M").concat(l-5,",").concat(s+5,"L").concat(l+5,",").concat(s-5)).attr("class","commit ".concat(h," ").concat(n.id," commit").concat(C[n.branch].index%8))}}if(S[n.id]="TB"===N?{x:l,y:o+10}:{x:o+10,y:s},c){if(n.type!==O&&(n.customId&&n.type===R||n.type!==R)&&r.showCommitLabel){var g=i.append("g"),d=g.insert("rect").attr("class","commit-label-bkg"),b=g.append("text").attr("x",o).attr("y",s+25).attr("class","commit-label").text(n.id),f=b.node().getBBox();if(d.attr("x",o+10-f.width/2-2).attr("y",s+13.5).attr("width",f.width+4).attr("height",f.height+4),"TB"===N&&(d.attr("x",l-(f.width+16+5)).attr("y",s-12),b.attr("x",l-(f.width+16)).attr("y",s+f.height-12)),"TB"!==N&&b.attr("x",o+10-f.width/2),r.rotateCommitLabel)if("TB"===N)b.attr("transform","rotate(-45, "+l+", "+s+")"),d.attr("transform","rotate(-45, "+l+", "+s+")");else{var k=-7.5-(f.width+10)/25*9.5,_=10+f.width/25*8.5;g.attr("transform","translate("+k+", "+_+") rotate(-45, "+o+", "+s+")")}}if(n.tag){var x=i.insert("polygon"),v=i.append("circle"),w=i.append("text").attr("y",s-16).attr("class","tag-label").text(n.tag),T=w.node().getBBox();w.attr("x",o+10-T.width/2);var E=T.height/2,L=s-19.2;x.attr("class","tag-label-bkg").attr("points","\n          ".concat(o-T.width/2-2,",").concat(L+2,"\n          ").concat(o-T.width/2-2,",").concat(L-2,"\n          ").concat(o+10-T.width/2-4,",").concat(L-E-2,"\n          ").concat(o+10+T.width/2+4,",").concat(L-E-2,"\n          ").concat(o+10+T.width/2+4,",").concat(L+E+2,"\n          ").concat(o+10-T.width/2-4,",").concat(L+E+2)),v.attr("cx",o-T.width/2+2).attr("cy",L).attr("r",1.5).attr("class","tag-hole"),"TB"===N&&(x.attr("class","tag-label-bkg").attr("points","\n            ".concat(l,",").concat(o+2,"\n            ").concat(l,",").concat(o-2,"\n            ").concat(l+10,",").concat(o-E-2,"\n            ").concat(l+10+T.width+4,",").concat(o-E-2,"\n            ").concat(l+10+T.width+4,",").concat(o+E+2,"\n            ").concat(l+10,",").concat(o+E+2)).attr("transform","translate(12,12) rotate(45, "+l+","+o+")"),v.attr("cx",l+2).attr("cy",o).attr("transform","translate(12,12) rotate(45, "+l+","+o+")"),w.attr("x",l+5).attr("y",o+3).attr("transform","translate(14,14) rotate(45, "+l+","+o+")"))}}(o+=50)>P&&(P=o)}))},$=function t(e,c){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=e+Math.abs(e-c)/2;return r>5?a:B.every((function(t){return Math.abs(t-a)>=10}))?(B.push(a),a):t(e,c-Math.abs(e-c)/5,r+1)},H=function(t,e,c,r){var a,n=S[e.id],i=S[c.id],o=function(t,e,c){return Object.keys(c).filter((function(r){return c[r].branch===e.branch&&c[r].seq>t.seq&&c[r].seq<e.seq})).length>0}(e,c,r),s="",l="",h=0,m=0,u=C[c.branch].index;if(o){s="A 10 10, 0, 0, 0,",l="A 10 10, 0, 0, 1,",h=10,m=10,u=C[c.branch].index;var y=n.y<i.y?$(n.y,i.y):$(i.y,n.y),p=n.x<i.x?$(n.x,i.x):$(i.x,n.x);a="TB"===N?n.x<i.x?"M ".concat(n.x," ").concat(n.y," L ").concat(p-h," ").concat(n.y," ").concat(l," ").concat(p," ").concat(n.y+m," L ").concat(p," ").concat(i.y-h," ").concat(s," ").concat(p+m," ").concat(i.y," L ").concat(i.x," ").concat(i.y):"M ".concat(n.x," ").concat(n.y," L ").concat(p+h," ").concat(n.y," ").concat(s," ").concat(p," ").concat(n.y+m," L ").concat(p," ").concat(i.y-h," ").concat(l," ").concat(p-m," ").concat(i.y," L ").concat(i.x," ").concat(i.y):n.y<i.y?"M ".concat(n.x," ").concat(n.y," L ").concat(n.x," ").concat(y-h," ").concat(s," ").concat(n.x+m," ").concat(y," L ").concat(i.x-h," ").concat(y," ").concat(l," ").concat(i.x," ").concat(y+m," L ").concat(i.x," ").concat(i.y):"M ".concat(n.x," ").concat(n.y," L ").concat(n.x," ").concat(y+h," ").concat(l," ").concat(n.x+m," ").concat(y," L ").concat(i.x-h," ").concat(y," ").concat(s," ").concat(i.x," ").concat(y-m," L ").concat(i.x," ").concat(i.y)}else"TB"===N?(n.x<i.x&&(s="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,u=C[c.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(i.x-h," ").concat(n.y," ").concat(l," ").concat(i.x," ").concat(n.y+m," L ").concat(i.x," ").concat(i.y)),n.x>i.x&&(s="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,u=C[e.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(n.x," ").concat(i.y-h," ").concat(l," ").concat(n.x-m," ").concat(i.y," L ").concat(i.x," ").concat(i.y)),n.x===i.x&&(u=C[e.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(n.x+h," ").concat(n.y," ").concat(s," ").concat(n.x+m," ").concat(i.y+h," L ").concat(i.x," ").concat(i.y))):(n.y<i.y&&(s="A 20 20, 0, 0, 0,",h=20,m=20,u=C[c.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(n.x," ").concat(i.y-h," ").concat(s," ").concat(n.x+m," ").concat(i.y," L ").concat(i.x," ").concat(i.y)),n.y>i.y&&(s="A 20 20, 0, 0, 0,",h=20,m=20,u=C[e.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(i.x-h," ").concat(n.y," ").concat(s," ").concat(i.x," ").concat(n.y-m," L ").concat(i.x," ").concat(i.y)),n.y===i.y&&(u=C[e.branch].index,a="M ".concat(n.x," ").concat(n.y," L ").concat(n.x," ").concat(i.y-h," ").concat(s," ").concat(n.x+m," ").concat(i.y," L ").concat(i.x," ").concat(i.y)));t.append("path").attr("d",a).attr("class","arrow arrow"+u%8)},z={parser:s,db:E,renderer:{draw:function(t,e,c,r){var a;C={},S={},L={},P=0,B=[],N="LR";var o=(0,n.z)(),s=o.gitGraph;n.l.debug("in gitgraph renderer",t+"\n","id:",e,c),L=r.db.getCommits();var l=r.db.getBranchesAsObjArray();N=r.db.getDirection();var h=(0,i.Ys)('[id="'.concat(e,'"]')),m=0;l.forEach((function(t,e){var c=G(t.name),r=h.append("g"),a=r.insert("g").attr("class","branchLabel"),n=a.insert("g").attr("class","label branch-label");n.node().appendChild(c);var i=c.getBBox();C[t.name]={pos:m,index:e},m+=50+(s.rotateCommitLabel?40:0)+("TB"===N?i.width/2:0),n.remove(),a.remove(),r.remove()})),D(h,L,!1),s.showBranches&&function(t,e){var c=(0,n.z)().gitGraph,r=t.append("g");e.forEach((function(t,e){var a=e%8,n=C[t.name].pos,i=r.append("line");i.attr("x1",0),i.attr("y1",n),i.attr("x2",P),i.attr("y2",n),i.attr("class","branch branch"+a),"TB"===N&&(i.attr("y1",30),i.attr("x1",n),i.attr("y2",P),i.attr("x2",n)),B.push(n);var o=t.name,s=G(o),l=r.insert("rect"),h=r.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+a);h.node().appendChild(s);var m=s.getBBox();l.attr("class","branchLabelBkg label"+a).attr("rx",4).attr("ry",4).attr("x",-m.width-4-(!0===c.rotateCommitLabel?30:0)).attr("y",-m.height/2+8).attr("width",m.width+18).attr("height",m.height+4),h.attr("transform","translate("+(-m.width-14-(!0===c.rotateCommitLabel?30:0))+", "+(n-m.height/2-1)+")"),"TB"===N&&(l.attr("x",n-m.width/2-10).attr("y",0),h.attr("transform","translate("+(n-m.width/2-5)+", 0)")),"TB"!==N&&l.attr("transform","translate(-19, "+(n-m.height/2)+")")}))}(h,l),function(t,e){var c=t.append("g").attr("class","commit-arrows");Object.keys(e).forEach((function(t){var r=e[t];r.parents&&r.parents.length>0&&r.parents.forEach((function(t){H(c,e[t],r,e)}))}))}(h,L),D(h,L,!0),n.u.insertTitle(h,"gitTitleText",s.titleTopMargin,r.db.getDiagramTitle()),(0,n.A)(void 0,h,s.diagramPadding,null!==(a=s.useMaxWidth)&&void 0!==a?a:o.useMaxWidth)}},styles:function(t){return"\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ".concat([0,1,2,3,4,5,6,7].map((function(e){return"\n        .branch-label".concat(e," { fill: ").concat(t["gitBranchLabel"+e],"; }\n        .commit").concat(e," { stroke: ").concat(t["git"+e],"; fill: ").concat(t["git"+e],"; }\n        .commit-highlight").concat(e," { stroke: ").concat(t["gitInv"+e],"; fill: ").concat(t["gitInv"+e],"; }\n        .label").concat(e,"  { fill: ").concat(t["git"+e],"; }\n        .arrow").concat(e," { stroke: ").concat(t["git"+e],"; }\n        ")})).join("\n"),"\n\n  .branch {\n    stroke-width: 1;\n    stroke: ").concat(t.lineColor,";\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelColor,";}\n  .commit-label-bkg { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelBackground,"; opacity: 0.5; }\n  .tag-label { font-size: ").concat(t.tagLabelFontSize,"; fill: ").concat(t.tagLabelColor,";}\n  .tag-label-bkg { fill: ").concat(t.tagLabelBackground,"; stroke: ").concat(t.tagLabelBorder,"; }\n  .tag-hole { fill: ").concat(t.textColor,"; }\n\n  .commit-merge {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n  .commit-reverse {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ").concat(t.textColor,";\n  }\n")}}}}]);
//# sourceMappingURL=846.2b00ce01.chunk.js.map